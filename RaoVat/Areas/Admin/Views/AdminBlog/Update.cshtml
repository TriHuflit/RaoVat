@model RaoVat.Models.Blog

@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Update</h2>

@using (Html.BeginForm("Update", "AdminBlog", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Blog</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IDBlog)

    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateCreate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateCreate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateCreate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Titile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea id="file-picker" class="form-control" name="Content">
                    @if(Model!=null){
                          @Model.Content
                    }              
                </textarea>
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.slug, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.slug, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.slug, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImgURL, "Hình Ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model != null)
            {
                <img src="@Model.Image" style="width:150px;height:150px" id="previewImage" multiple accept="image/jpeg,image/png,image/jpg" />
                <input type="file" id="Image" name="Image" onchange="ShowImage(this, document.getElementById('previewImage'))" />
                @Html.ValidationMessageFor(model => model.ImgURL, "", new { @class = "text-danger" })
            }
            else
            {
                <img src="" style="width:150px;height:150px" id="previewImage" multiple accept="image/jpeg,image/png,image/jpg" />
                <input type="file" id="Image" name="Image" onchange="ShowImage(this, document.getElementById('previewImage'))" />
                @Html.ValidationMessageFor(model => model.ImgURL, "", new { @class = "text-danger" })
            }
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save"  class="btn btn-primary"  style=" background-color: #419A1C; border-color:#419A1C;" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
